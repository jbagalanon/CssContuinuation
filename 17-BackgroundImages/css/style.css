/* if no additional setting in 
background: url("../images/folder-img.jpeg");
then the defaul value will be image repeat in both direction or crop 
additiona settings
background-repeat: repeat, no-repeat;
round = means stretch the image to fit the container

in-order - if several repeat settings are given then the last one will be applied

background-size: cover, contain;
cover = stretch the image to fit the container,
contain = stretch the image to fit the container but the image will not be cropped

backgroup-position: center, top, bottom, left, right;

background-attachment: fixed, scroll;
fixed = the image will be fixed in the container
scroll = the image will be scrolled in the container
*/
/* 
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

div {
  height: 300px;
  color: white;
  border: 2px solid red;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  text-transform: uppercase;
}

.big-img {
  background: url("../big.jpeg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

.small-img {
  background: url("../images/folder-img.jpeg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
}

.folder-img {
  background: url("../big.jpeg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
} */

div {
  width: 150px;
  height: 150px;
  margin: 5px;
}

.one {
  background: linear-gradient(blue, green);
}

.two {
  background: linear-gradient(blue, green, red, yellow);
}

.three {
  background: linear-gradient(160deg, red, green);
}

.four {
  background: linear-gradient(to top right, red, green);
}

.five {
  background: linear-gradient(blue 10%, yellow 90%);
}

.six {
  background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.9));
}
